
@{
    ViewData["Title"] = "Querie 2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Query 2</h1>
            <h4>Select the features of the species </h4>
        </div>
    </div>
    <div class="row" id="panel_generalInfo" >
        <div class="col-lg-12">
            <div class="panel-body">
                <div>
                    <div class="row">
                        <div class="col-md-4">
                            <span>Select Region</span>
                            <div>
                                <ul id="regionContainer"></ul>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <span>Select Habitat</span>
                            <div>
                                <ul id="habitatContainer"></ul>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <span>Additional Info</span>
                            <div class="row" style="margin-top:15px; margin-bottom:15px">
                                <label class="col-md-3 control-label text-right">Avg. Size</label>
                                <div class="col-md-6">
                                    <input type="text" class="col-md-3 form-control" id="txtAvgSize" maxlength="10" />
                                </div>
                            </div>
                            @*<div class="row" style="margin-bottom:15px">
                                <label class="col-md-3 control-label text-right">Body Color</label>
                                <div class="col-md-6">
                                    <input type="text" class="col-md-3 form-control" id="txtBodyColor" maxlength="10" />
                                </div>
                            </div>*@
                            <div class="row">
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-danger btn-block" onclick="executeFilterQuery()">
                                        <i class="fa fa-search"></i> Search
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="panel-footer">Footer del panel</div>*@
        </div>
    </div>

    <div class="table-responsive" style="overflow-y:scroll;  max-height:350px !important">
        <table id="resultTable" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th><strong>URI</strong></th>
                    <th><strong>Binomial Name</strong></th>
                    <th><strong>Common Name</strong></th>
                    <th><strong>Order</strong></th>
                    <th><strong>Family</strong></th>
                    <th><strong>Genus</strong></th>
                    <th><strong>Region</strong></th>
                    <th><strong>Habitat</strong></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div class="row" style="margin-top:15px"> 
        <div class="col-md-4 col-md-offset-8">
            <button type="button" class="btn btn-warning btn-block hidden" onclick="viewSpeciesDetail()" id="btnViewDetails">
                <i class="fa fa-pagelines"></i> View Details
            </button>
        </div>
    </div>
</div>

@section BodyArea{ 
    @Html.Partial("_Loading")
}

@section Scripts{
    <script>

        var global = {};
        $(document).ready(function () {
            global.resultTable = $('#resultTable').DataTable();
            getHabitatRegion();

            $('#resultTable tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    global.resultTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');

                    global.viewmodel = global.resultTable.row(this).data();
                    //console.log(data);
                }

                if (global.resultTable.$('tr.selected').length > 0) {
                    $('#btnViewDetails').removeClass('hidden');

                }
                else {
                    if (!$('#btnViewDetails').hasClass('hidden')) {
                        $('#btnViewDetails').addClass('hidden');

                    }
                }
            });
        });

        //Creacion de checkbox dinamico
        var createCheckboxList = function (parent, data) {
            var container = $('#' + parent);
            $.each(data, function (index, value) {
                var li = $('<li/>')
                    //.addClass('ui-menu-item')
                    //.attr('role', 'menuitem')
                    .appendTo(container);

                var div = $('<div/>')
                    .addClass('checkbox')
                    .appendTo(li);

                var label = $('<label/>')
                    .text(value.name)
                    .appendTo(div);

                var input = $('<input/>')
                    //.addClass('ui-all')
                    .attr('type', 'checkbox')
                    .prependTo(label);

            });
        }

        var setResultDataTable = function (content) {
            //console.log('Antes de crear la tabla');
            //console.log(content);

            global.resultTable = $('#resultTable').DataTable();
            global.resultTable.destroy();

            global.resultTable = $('#resultTable').DataTable({
                autoWidth: true,
                ordering: true,
                data: content,
                columnDefs: [{
                    targets: 0,
                    render: function (data, type, row) {
                        return type === 'display' && data.length > 10 ?
                            data.substr(0, 47) + '…' :
                            data;
                    }
                }],
                columns: [
                    { data: 'uri' },
                    { data: 'binomialName' },
                    { data: 'commonName' },
                    { data: 'order.name' },
                    { data: 'family.name' },
                    { data: 'genus.name' },
                    { data: 'region' },
                    { data: 'habitat' }
                ]
            });
        }

        var getSelectedProperties = function (parent) {
            var data = [];
            var container = $('#' + parent);
            container.find('li').each(function (index, element) {
                var chk = $(element).find('input');
                if ($(chk).is(':checked')) {

                    data.push($($(element).find('label')).text());
                }
            });
            return data;
        }

        @*var viewSpeciesDetail = function () {
            var content = global.viewmodel;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ViewSpecie", "Species", )',
                contentType: 'application/json;charset=utf-8',
                dataType: 'json',
                data: JSON.stringify(content),

                beforeSend: function () {
                    $('#Loading').modal('show');
                    //console.log(this.data);
                },

                success: function (data, id) {
                    //var result = data.data;
                    //if (data.error.code == 200) {
                    //    //setResultDataTable(result);
                    //}
                    //else {
                    //    swal("Error!", 'Ocurrio un error al cargar tus datos...', "error");
                    //}
                    $('#Loading').modal('hide');
                },

                error: function (jqXHR, textStatus, errorThrown) {
                    $('#Loading').modal('hide');
                    swal("Error!", errorThrown, "error");
                    console.log("getData" + " errorThrown: " + errorThrown + " jqXHR: " + jqXHR + " textStatus " + textStatus);
                }
            });
        }*@

        var getQueryObject = function () {
            var region = getSelectedProperties('regionContainer');
            var habitat = getSelectedProperties('habitatContainer');

            var bird = {
                Size: $('#txtAvgSize').val(),
                Habitat: habitat,
                Region: region
                //public List<string> Habitat { get; set; }
                //public List<string> Region { get; set; }
            };
            return bird;

        }

        var getHabitatRegion = function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetHabitatRegion", "Ontology")',
                contentType: 'application/json;charset=utf-8',
                dataType: 'json',

                beforeSend: function () {
                    $('#Loading').modal('show');
                    //console.log(this.data);
                },

                success: function (data, id) {
                    var result = data.data;
                    if (data.error.code == 200) {
                        console.log(result);
                        createCheckboxList('regionContainer', result.region);
                        createCheckboxList('habitatContainer', result.habitat);
                    }
                    else {
                        swal("Error!", 'Ocurrio un error al cargar tus datos...', "error");
                    }
                    $('#Loading').modal('hide');
                },

                error: function (jqXHR, textStatus, errorThrown) {
                    $('#Loading').modal('hide');
                    swal("Error!", errorThrown, "error");
                    console.log("getData" + " errorThrown: " + errorThrown + " jqXHR: " + jqXHR + " textStatus " + textStatus);
                }
            });
        }

        var executeFilterQuery = function () {
            content = getQueryObject();
            console.log(JSON.stringify(content));
            $.ajax({
                type: 'POST',
                url: '@Url.Action("FilterBirdByLoc", "Ontology")',
                contentType: 'application/json;charset=utf-8',
                dataType: 'json',
                data: JSON.stringify(content),

                beforeSend: function () {
                    $('#Loading').modal('show');
                    //console.log(this.data);
                },

                success: function (data, id) {
                    var result = data.data;
                    if (data.error.code == 200) {
                        setResultDataTable(result);
                    }
                    else {
                        swal("Error!", 'Ocurrio un error al cargar tus datos...', "error");
                    }
                    $('#Loading').modal('hide');
                },

                error: function (jqXHR, textStatus, errorThrown) {
                    $('#Loading').modal('hide');
                    swal("Error!", errorThrown, "error");
                    console.log("getData" + " errorThrown: " + errorThrown + " jqXHR: " + jqXHR + " textStatus " + textStatus);
                }
            });

        }
    </script>
}
